{"version":3,"sources":["components/Explain.js","components/Calculator.js","components/ReadyCalc.js","components/CustomCalc.js","components/Solubility.js","components/Molweight.js","routes/Home.js","App.js","index.js"],"names":["Explain","name","mw","sol","className","notFound","found","Calculator","mass","massUnit","conc","concUnit","vol","volUnit","weight","parseFloat","console","log","empty","result","cConc","Math","round","convert","parseInt","from","to","cVol","toBest","cMass","error","ReadyCalc","cid","useState","setMass","setConc","setVol","setMassUnit","setConcUnit","setVolUnit","MassUnit","useRef","ConcUnit","VolUnit","calculator","val","toFixed","unit","optionArray","current","children","option","value","setAttribute","onSubmit","event","preventDefault","htmlFor","onChange","target","defaultValue","ref","readOnly","CustomCalc","setWeight","Solubility","map","item","key","Weight","custom","setCustom","query","setQuery","setName","setCid","setMw","setSol","CustomRef","getData","a","axios","get","Properties","data","PropertyTable","CID","MolecularWeight","getSolubility","results","solubilitySet","Record","Section","Information","length","push","final_result","Value","StringWithMarkup","String","n","temp","Markup","ShowExplain","checked","type","placeholder","onClick","Home","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4f867ac.chunk.js","sourcesContent":["const Explain = ({ name, mw, sol }) => {\n\n  const found = (name, mw) => {\n    return (\n      <div className=\"my-5\">\n        <div className=\"font-medium text-sm sm:text-md mb-5\">\n          <span>Searching for </span>\n          <span className=\"font-medium text-red-400\">\"{name}\"</span>\n        </div>\n      </div>\n    );\n  };\n  const notFound = name => {\n    return (\n      <div className=\"my-5 font-bold text-md\">\n        <h5 className=\"text-red-600\">Cannot Found \"{name}\". Please try again</h5>\n      </div>\n    );\n  };\n\n  if (mw === \"Not Found\") {\n    return notFound(name);\n  } else {\n    return found(name, mw);\n  }\n};\n\nexport default Explain;\n","import { useState } from \"react\";\nimport convert from \"convert-units\";\n\nconst Calculator = (mass, massUnit, conc, concUnit, vol, volUnit, weight) => {\n  weight = parseFloat(weight);\n  if (mass !== \"\" && conc !== \"\" && vol !== \"\") {\n    console.log(\"All Fields are not Empty!!\");\n    return { empty: \"nothing\", result: null };\n  } else if (mass === \"\" && conc !== \"\" && vol !== \"\") {\n    const cConc = Math.round(\n      convert(parseInt(conc))\n        .from(concUnit)\n        .to(\"mmol\")\n    );\n    const cVol = Math.round(\n      convert(parseInt(vol))\n        .from(volUnit)\n        .to(\"ml\")\n    );\n    const result = convert(cConc * cVol * weight)\n      .from(\"ng\")\n      .toBest();\n    return { empty: \"mass\", result: result };\n  } else if (mass !== \"\" && conc === \"\" && vol !== \"\") {\n    const cMass = Math.round(\n      convert(parseInt(mass))\n        .from(massUnit)\n        .to(\"mg\")\n    );\n    const cVol = Math.round(\n      convert(parseInt(vol))\n        .from(volUnit)\n        .to(\"ml\")\n    );\n    const result = convert(cMass / (cVol * weight))\n      .from(\"mol\")\n      .toBest();\n    return { empty: \"conc\", result: result };\n  } else if (mass !== \"\" && conc !== \"\" && vol == \"\") {\n    const cMass = Math.round(\n      convert(mass)\n        .from(massUnit)\n        .to(\"mg\")\n    );\n    const cConc = Math.round(\n      convert(conc)\n        .from(concUnit)\n        .to(\"mmol\")\n    );\n    const result = convert(cMass / (cConc * weight))\n      .from(\"l\")\n      .toBest();\n    return { empty: \"volume\", result: result };\n  } else {\n    console.error(\"Something Wrong\");\n  }\n};\n\nexport default Calculator;\n","import { useState, useRef } from \"react\";\nimport Calculator from \"./Calculator\";\n\nconst ReadyCalc = ({ mw, cid }) => {\n  const [mass, setMass] = useState(\"\");\n  const [conc, setConc] = useState(\"\");\n  const [vol, setVol] = useState(\"\");\n  const [weight, setWeight] = useState(mw);\n  const [massUnit, setMassUnit] = useState(\"mg\");\n  const [concUnit, setConcUnit] = useState(\"mmol\");\n  const [volUnit, setVolUnit] = useState(\"ml\");\n  const MassUnit = useRef();\n  const ConcUnit = useRef();\n  const VolUnit = useRef();\n\n  const handleMass = event => {\n    setMass(event.target.value);\n  };\n  const handleConc = event => {\n    setConc(event.target.value);\n  };\n  const handleVol = event => {\n    setVol(event.target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    calculator();\n  };\n\n  const calculator = () => {\n    const result = Calculator(\n      mass,\n      massUnit,\n      conc,\n      concUnit,\n      vol,\n      volUnit,\n      weight\n    );\n    if (result.empty === \"nothing\") {\n      console.log(\"All Fields are Not Empty\");\n    } else if (result.empty === \"mass\") {\n      setMass(result.result.val.toFixed(3));\n      setMassUnit(result.result.unit);\n      const optionArray = MassUnit.current.children;\n      for (const option in optionArray) {\n        if (optionArray[option].value === result.result.unit) {\n          optionArray[option].setAttribute(\"selected\", true);\n        }\n      }\n    } else if (result.empty === \"conc\") {\n      setConc(result.result.val.toFixed(3));\n      setConcUnit(result.result.unit);\n      const optionArray = ConcUnit.current.children;\n      console.log(optionArray);\n      for (const option in optionArray) {\n        if (optionArray[option].value === result.result.unit) {\n          optionArray[option].setAttribute(\"selected\", true);\n        }\n      }\n    } else if (result.empty === \"volume\") {\n      setVol(result.result.val.toFixed(3));\n      setVolUnit(result.result.unit);\n      const optionArray = VolUnit.current.children;\n      for (const option in optionArray) {\n        if (optionArray[option].value === result.result.unit) {\n          optionArray[option].setAttribute(\"selected\", true);\n        }\n      }\n    } else {\n      console.log(\"Something Wrong during get calculation data\");\n    }\n  };\n\n  const massSelect = event => {\n    setMassUnit(event.target.value);\n  };\n\n  const concSelect = event => {\n    setConcUnit(event.target.value);\n  };\n\n  const volSelect = event => {\n    setVolUnit(event.target.value);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"font-medium text-sm sm:text-md\">Calculator</div>\n      <form onSubmit={onSubmit} className=\"flex flex-col justify-between items-center sm:items-start w-full\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-center w-full\">\n          <div className=\"w-auto\">\n            <div className=\"cal-label\">\n              <label htmlFor=\"mass\">Mass</label>\n            </div>\n            <div>\n              <input name=\"mass\" value={mass} onChange={handleMass} className=\"cal-input\"></input>\n              <select\n                name=\"mass\"\n                defaultValue=\"mg\"\n                onChange={massSelect}\n                ref={MassUnit}\n                className=\"cal-select\"\n              >\n                <option value=\"ng\">ng</option>\n                <option value=\"ug\">μg</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"g\">g</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"cal-symbol\">=</div>\n          <div className=\"w-auto\">\n            <div className=\"cal-label\">\n              <label htmlFor=\"concentration\" >Conc.</label>\n            </div>\n            <div>\n              <input\n                name=\"concentration\"\n                value={conc}\n                onChange={handleConc}\n                className=\"cal-input\"\n              ></input>\n              <select\n                name=\"concentration\"\n                onChange={concSelect}\n                defaultValue=\"mmol\"\n                ref={ConcUnit}\n                className=\"cal-select\"\n              >\n                <option value=\"nmol\">nM</option>\n                <option value=\"umol\">μM</option>\n                <option value=\"mmol\">mM</option>\n                <option value=\"mol\">M</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"cal-symbol\">X</div>\n          <div className=\"w-auto\">\n            <div className=\"cal-label\">\n              <label htmlFor=\"volume\">Vol.</label>\n            </div>\n            <div>  \n              <input name=\"volume\" value={vol} onChange={handleVol} className=\"cal-input\"></input>\n              <select\n                name=\"volume\"\n                onChange={volSelect}\n                defaultValue=\"ml\"\n                ref={VolUnit}\n                className=\"cal-select\"\n              >\n                <option value=\"nl\">nl</option>\n                <option value=\"ul\">μl</option>\n                <option value=\"ml\">ml</option>\n                <option value=\"l\">L</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"cal-symbol\">X</div>\n          <div className=\"w-auto\">\n            <div className=\"cal-label\">\n              <label htmlFor=\"weight\">Mol Weight</label>\n            </div>\n            <div>\n              <input name=\"weight\" value={mw} readOnly className=\"cal-input\"></input>\n              <span className=\"cal-select ml-1\">g/mol</span>\n            </div>\n          </div>\n        </div>\n        <button className=\"custom-btn pb-0\">Calc</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ReadyCalc;\n","import { useState, useRef } from \"react\";\nimport Calculator from \"./Calculator\";\n\nconst CustomCalc = ({ mw }) => {\n  const [mass, setMass] = useState(\"\");\n  const [conc, setConc] = useState(\"\");\n  const [vol, setVol] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [massUnit, setMassUnit] = useState(\"mg\");\n  const [concUnit, setConcUnit] = useState(\"mmol\");\n  const [volUnit, setVolUnit] = useState(\"ml\");\n  const MassUnit = useRef();\n  const ConcUnit = useRef();\n  const VolUnit = useRef();\n\n  const handleMass = event => {\n    setMass(event.target.value);\n  };\n  const handleConc = event => {\n    setConc(event.target.value);\n  };\n  const handleVol = event => {\n    setVol(event.target.value);\n  };\n\n  const handleMw = event => {\n    setWeight(event.target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    calculator();\n  };\n\n  const calculator = () => {\n    const result = Calculator(\n      mass,\n      massUnit,\n      conc,\n      concUnit,\n      vol,\n      volUnit,\n      weight\n    );\n    if (result.empty === \"nothing\") {\n      console.log(\"All Fields are Not Empty\");\n    } else if (result.empty === \"mass\") {\n      setMass(result.result.val.toFixed(3));\n      setMassUnit(result.result.unit);\n      const optionArray = MassUnit.current.children;\n      for (const option in optionArray) {\n        if (optionArray[option].value === result.result.unit) {\n          optionArray[option].setAttribute(\"selected\", true);\n        }\n      }\n    } else if (result.empty === \"conc\") {\n      setConc(result.result.val.toFixed(3));\n      setConcUnit(result.result.unit);\n      const optionArray = ConcUnit.current.children;\n      console.log(optionArray);\n      for (const option in optionArray) {\n        if (optionArray[option].value === result.result.unit) {\n          optionArray[option].setAttribute(\"selected\", true);\n        }\n      }\n    } else if (result.empty === \"volume\") {\n      setVol(result.result.val.toFixed(3));\n      setVolUnit(result.result.unit);\n      const optionArray = VolUnit.current.children;\n      for (const option in optionArray) {\n        if (optionArray[option].value === result.result.unit) {\n          optionArray[option].setAttribute(\"selected\", true);\n        }\n      }\n    } else {\n      console.log(\"Something Wrong during get calculation data\");\n    }\n  };\n\n  const massSelect = event => {\n    setMassUnit(event.target.value);\n  };\n\n  const concSelect = event => {\n    setConcUnit(event.target.value);\n  };\n\n  const volSelect = event => {\n    setVolUnit(event.target.value);\n  };\n\n  return (\n    <div className=\"w-full my-5\">\n      <div className=\"font-medium text-sm sm:text-md\">Calculator</div>\n      <form onSubmit={onSubmit} className=\"flex flex-col justify-between items-center sm:items-start w-full\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-center w-full\">\n          <div className=\"w-auto\">\n            <div className=\"cal-label\">\n              <label htmlFor=\"mass\">Mass</label>\n            </div>\n            <div>\n              <input name=\"mass\" value={mass} onChange={handleMass} className=\"cal-input\"></input>\n              <select\n                name=\"mass\"\n                defaultValue=\"mg\"\n                onChange={massSelect}\n                ref={MassUnit}\n                className=\"cal-select\"\n              >\n                <option value=\"ng\">ng</option>\n                <option value=\"ug\">μg</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"g\">g</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"cal-symbol\">=</div>\n          <div className=\"w-auto\">\n            <div className=\"cal-label\">\n              <label htmlFor=\"concentration\">Conc.</label>\n            </div>\n            <div>\n              <input\n                name=\"concentration\"\n                value={conc}\n                onChange={handleConc}\n                className=\"cal-input\"\n              ></input>\n              <select\n                name=\"concentration\"\n                onChange={concSelect}\n                defaultValue=\"mmol\"\n                ref={ConcUnit}\n                className=\"cal-select\"\n              >\n                <option value=\"nmol\">nM</option>\n                <option value=\"umol\">μM</option>\n                <option value=\"mmol\">mM</option>\n                <option value=\"mol\">M</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"cal-symbol\">X</div>\n          <div className=\"w-auto\">\n            <div>\n              <label htmlFor=\"volume\" className=\"cal-label\">Vol.</label>\n            </div>\n            <div>\n              <input name=\"volume\" value={vol} onChange={handleVol} className=\"cal-input\"></input>\n              <select\n                name=\"volume\"\n                onChange={volSelect}\n                defaultValue=\"ml\"\n                ref={VolUnit}\n                className=\"cal-select\"\n              >\n                <option value=\"nl\">nl</option>\n                <option value=\"ul\">μl</option>\n                <option value=\"ml\">ml</option>\n                <option value=\"l\">L</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"cal-symbol\">X</div>\n          <div className=\"w-auto\">\n            <div>\n              <label htmlFor=\"weight\" className=\"cal-label\">Mol Weight</label>\n            </div>\n            <div>\n              <input name=\"weight\" value={weight} onChange={handleMw} className=\"cal-input\"></input>\n              <span className=\"cal-select ml-1\">g/mol</span>\n            </div>\n          </div>\n        </div>\n        <button className=\"custom-btn\">Calculate</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CustomCalc;\n","const Solubility = ({ name, mw, sol }) => {\n  const found = (name, mw) => {\n    return (\n      <div className=\"mt-10\">\n        <div className=\"font-normal sm:font-medium\">\n          Solubility Information*\n        </div>\n        <ul>\n          {sol.map((item, key) => (\n            <li\n              key={key}\n              className=\"text-xs font-light sm:font-normal sm:text-sm mb-2\"\n            >\n              {key + 1}: {item}\n            </li>\n          ))}\n        </ul>\n        <div className=\"text-xs font-light\">\n          <div>\n            *Solubility data is for information only. It may differ from actual\n            solubility. Please check your data sheet.\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const notFound = name => {\n    return null;\n  };\n\n  if (mw === \"Not Found\") {\n    return notFound(name);\n  } else {\n    return found(name, mw);\n  }\n};\n\nexport default Solubility;\n","import { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport Explain from \"./Explain\";\nimport ReadyCalc from \"./ReadyCalc\";\nimport CustomCalc from \"./CustomCalc\";\nimport Solubility from \"./Solubility\";\n\nconst Weight = () => {\n  const [custom, setCustom] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [cid, setCid] = useState(\"\");\n  const [mw, setMw] = useState(\"\");\n  const [sol, setSol] = useState([])\n  const CustomRef = useRef();\n  const handleQueryChange = event => {\n    setQuery(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setCustom(false);\n    if (CustomRef.current.checked === true) {\n      CustomRef.current.checked = false;\n    }\n    getData(query);\n    setName(query);\n    setQuery(\"\");\n  };\n  const getData = async query => {\n    try {\n      const {\n        data: {\n          PropertyTable: { Properties }\n        }\n      } = await axios.get(\n        `https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/${query}/property/MolecularWeight/JSON`\n      );\n      setCid(Properties[0].CID);\n      setMw(Properties[0].MolecularWeight);\n      getSolubility(Properties[0].CID);\n    } catch {\n      setCid(\"Not Found\");\n      setMw(\"Not Found\");\n    }\n  };\n\n  const getSolubility = async(cid) => {\n    let results = []\n    try {\n        const result = await axios.get(`https://pubchem.ncbi.nlm.nih.gov/rest/pug_view/data/compound/${cid}/JSON?heading=solubility`)\n        const solubilitySet = result.data.Record.Section[0].Section[0].Section[0].Information\n        if (solubilitySet.length === 0) {\n            const final_result = \"Cannot find solubility data\"\n            results.push(final_result)\n        } else if (solubilitySet.length === 1) {\n            const final_result = solubilitySet[0].Value.StringWithMarkup[0].String\n            results.push(final_result)\n        } else {\n            let n = 0;\n            while (n < (solubilitySet.length)) {\n                const temp = solubilitySet[n]\n                if (temp.Value.StringWithMarkup[0].Markup) {\n                    results.push(temp.Value.StringWithMarkup[0].String)\n                }\n                n++;\n            }\n        }\n        return setSol(results)\n    } catch (error) {\n        console.log(\"Cannot get solubility data\")\n    }\n}\n\n  const handleCustom = event => {\n    setCustom(event.target.checked);\n    if (custom === true) {\n      setQuery(\"\");\n      setName(\"\");\n      setCid(\"\");\n      setMw(\"\");\n    }\n  };\n\n  const ShowExplain = () => {\n    if (custom === false && mw !== \"\") {\n      if (mw !== \"Not Found\") {\n        return (\n          <div>\n            <Explain name={name} mw={mw} sol={sol} />\n            <ReadyCalc name={name} mw={mw} custom={custom}></ReadyCalc>\n            <Solubility name={name} mw={mw} sol={sol} />\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <Explain name={name} mw={mw} />\n          </div>\n        );\n      }\n    } else if (custom === true) {\n      return <CustomCalc name={name} mw={mw} custom={custom}></CustomCalc>;\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto w-4/5 md:w-3/5\">\n      <form onSubmit={handleSubmit} className=\"flex flex-row w-full mb-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Searching by Name\"\n          value={query}\n          onChange={handleQueryChange}\n          className=\"search-box border w-full px-4 py-2 mr-3 text-sm sm:text-base font-medium text-gray-900 placeholder-gray-600 rounded-sm shadow-md focus:outline-none\"\n        />\n        <button className=\" text-sm sm:text-base text-center font-medium px-2 rounded-sm py-2 text-gray-900 bg-blue-400 shadow-md focus:outline-none\">Submit</button>\n      </form>\n      <form className=\"flex flex-row items-center\">\n        <label htmlFor=\"custom\" className=\"text-xs sm:text-sm font-medium mr-2\">Custom Calculation</label>\n        <input\n          name=\"custom\"\n          type=\"checkbox\"\n          onClick={handleCustom}\n          ref={CustomRef}\n          className=\"border border-gray-900\"\n        ></input>\n      </form>\n      <ShowExplain />\n    </div>\n  );\n};\n\nexport default Weight;\n","import Weigth from \"../components/Molweight\";\n\nconst Home = () => {\n  return (\n    <div className=\"w-full min-h-screen flex flex-col justify-center items-center\">\n      <h1 className=\"text-3xl sm:text-5xl font-normal text-indigo-600 mb-10\">\n        Molarity Calculator\n      </h1>\n      <Weigth></Weigth>\n    </div>\n  );\n};\n\nexport default Home;\n","import { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact component={Home}></Route>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}